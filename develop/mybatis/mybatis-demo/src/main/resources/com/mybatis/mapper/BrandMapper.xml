<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
   数据库表的字段名称和实体类的属性名称不一样，则不能自动封装数据
   * 起别名
   缺点：每次查询都要定义一次别名
   * resultMap

-->
<mapper namespace="com.mybatis.mapper.BrandMapper">
    <!--
           id：完成主键字段的映射
               column：表的列名
               property：实体类的属性名
           result：完成一般字段的映射
               column：表的列名
               property：实体类的属性名
       -->
    <resultMap id="brandResultMap" type="brand">
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>



    <select id="selectAll" resultMap="brandResultMap">
         select *
         from tb_brand;

/*
#{}防止sql注入
${}拼参数存在sql注入问题
时机
#参数传递
$参数是表名或者列名

特殊字符处理
1.转义字符：小于符号
2.cdata区：
*/


    </select>
    <select id="selectById" resultMap="brandResultMap">
        select * from tb_brand where id = #{id};
    </select>

<!--    条件
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        where status = #{status}
          and company_name like #{companyName}
          and brand_name like #{brandName}
    </select>-->

<!--    动态条件查询
动态条件查询
*if:条件判断
*test:逻辑表达式
* 问题:
1.恒等式 where 1=1
2.<where>
-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand 1=1
        where
            <if test="status != null">and status = #{status}</if>
            <if test="companyName != null and companyName != ''">and company_name like #{companyName}</if>
            <if test="brandName != null and brandName != ''">and brand_name like #{brandName}</if>

    </select>

    <select id="selectByConditionSingle" resultMap="brandResultMap">
    select * from tb_brand where
    <choose>
        <when test="status != null">status = #{status}</when>
        <when test="companyName != null and companyName != ''">and company_name like #{companyName}</when>
        <when test="brandName != null and brandName != ''">and brand_name like #{brandName}</when>
        <otherwise>1=1</otherwise>
    </choose>

    </select>

    <!--添加-->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand(brand_name, company_name, ordered, description, status   )
        values (#{brandName},#{companyName},#{ordered},#{description},#{status});
    </insert>

<!--动态修改-->

    <update id="updata">        update tb_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        where id = #{id};</update>
<!--删除-->
    <delete id="deleteById">
    delete from tb_brand
    where id = #{id};
    </delete>
<!--
mybatis会将数组参数，封装为一个Map集合
*默认:array=数组
使用@Param注解改变map集合的默认key的名称
-->
    <delete id="deleteByIds">
        delete from tb_brand
        where id
        in
        <foreach collection="ids" item='id' separator="," open="(" close=")">
        #{id}
        </foreach>
    </delete>
</mapper>